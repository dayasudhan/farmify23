
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("AWS_DATABASE_URL") 
}

enum TYPE {
  ENGINE
  TRAILER
  CULTIVATOR
  ROTAVATOR
  PLOUGH
  HARROW
  SEEDER
  SPRAYER
  LEVELLER
  POSTHOLEDIGGER 
  OTHER
}

model Item {
  id              Int       @default(autoincrement()) @id @unique
  name            String
  image_urls      String[]
  price           Int?
  availability    Boolean?
  description     String?
  createdAt       DateTime
  updatedAt       DateTime?
  seller_name     String?
  address         String?
  district        String?
  city            String?
  state           String?
  zipCode         Int?
  phone           String?
  makeYear        String?
  registrationYear String?
  hoursDriven     Int?
  no_of_owners    Int?
  vehicleNo       Int?
  enquiries        Enquiry[]
  order           Order?
  dealer          Dealer    @relation(fields: [dealerId], references: [id])
  dealerId        Int
  latitude        Float?
  longitude       Float?
  model           String?
  make            String?
  hypothecation_status String?
  loan_status   String? 
  insurance_status Boolean?
  rc_present     Boolean?
  fitnessCertificate  Boolean?
  fc_approximate_cost Int?
  tailor_attached Boolean?
  condition  String?
  battery_condition String?
  tyre_condition String?
  rto  String?
  loan_availability   Boolean? 
  type  TYPE   @default(OTHER)
  @@map("item")
}


model Enquiry {
  id    Int     @default(autoincrement()) @id
  name                String
  address            String?        
  address2            String?       
  city                String?        
  state               String?        
  zipCode             Int?       
  phone               String  
  email               String? 
  item   Item @relation(fields: [itemId], references: [id])
  itemId Int 
  createdAt    DateTime   
  updatedAt    DateTime?
  @@map("enquiry")
}
model Order {
  id    Int     @default(autoincrement()) @id
  name                String
  address            String?        
  address2            String?       
  city                String?        
  state               String?        
  zipCode             Int?       
  phone               String  
  email               String? 
  item   Item @relation(fields: [itemId], references: [id])
  itemId Int @unique
  createdAt    DateTime   
  updatedAt    DateTime?
  @@map("order")
}
model Dealer {
  id    Int     @default(autoincrement()) @id
  username  String @unique
  password  String
  orgpassword  String
  phone     String
  address   String?
  district  String       
  city      String?        
  state     String        
  createdAt DateTime   
  updatedAt DateTime?
  name  String
  deviceToken  String? @default("")
  items Item[]
  @@map("dealer")
}

